// Generated from grammar/RiScript.g4 by ANTLR 4.9
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u001a\u00b0\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003",
    "\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006",
    "\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003\n\u0003",
    "\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003\u000e",
    "\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011",
    "\u0005\u0011W\n\u0011\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012",
    "\u0003\u0012\u0003\u0013\u0007\u0013_\n\u0013\f\u0013\u000e\u0013b\u000b",
    "\u0013\u0003\u0013\u0003\u0013\u0007\u0013f\n\u0013\f\u0013\u000e\u0013",
    "i\u000b\u0013\u0003\u0014\u0007\u0014l\n\u0014\f\u0014\u000e\u0014o",
    "\u000b\u0014\u0003\u0014\u0003\u0014\u0007\u0014s\n\u0014\f\u0014\u000e",
    "\u0014v\u000b\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015",
    "\u0005\u0015|\n\u0015\u0006\u0015~\n\u0015\r\u0015\u000e\u0015\u007f",
    "\u0003\u0016\u0003\u0016\u0006\u0016\u0084\n\u0016\r\u0016\u000e\u0016",
    "\u0085\u0003\u0016\u0003\u0016\u0003\u0017\u0007\u0017\u008b\n\u0017",
    "\f\u0017\u000e\u0017\u008e\u000b\u0017\u0003\u0017\u0006\u0017\u0091",
    "\n\u0017\r\u0017\u000e\u0017\u0092\u0003\u0017\u0007\u0017\u0096\n\u0017",
    "\f\u0017\u000e\u0017\u0099\u000b\u0017\u0003\u0018\u0003\u0018\u0003",
    "\u0018\u0003\u0019\u0006\u0019\u009f\n\u0019\r\u0019\u000e\u0019\u00a0",
    "\u0003\u001a\u0003\u001a\u0007\u001a\u00a5\n\u001a\f\u001a\u000e\u001a",
    "\u00a8\u000b\u001a\u0003\u001b\u0003\u001b\u0007\u001b\u00ac\n\u001b",
    "\f\u001b\u000e\u001b\u00af\u000b\u001b\u0002\u0002\u001c\u0003\u0003",
    "\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013",
    "\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011",
    "!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0017-\u0018/\u00191\u001a3\u0002",
    "5\u0002\u0003\u0002\n\u0004\u0002\u000b\u000b\"\"\u0006\u0002%%2;C\\",
    "c|\u0003\u00022;\b\u0002##&&,,>>@@``\u000b\u0002\u000b\f\"#&&*,00>@",
    "]]_`}\u007f\u0005\u0002C\\aac|\u0007\u0002//2;C\\aac|\u0006\u00022;",
    "C\\aac|\u0002\u00bb\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005",
    "\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t",
    "\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r",
    "\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011",
    "\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015",
    "\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019",
    "\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d",
    "\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!",
    "\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003",
    "\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002",
    "\u0002\u0002\u0002+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002",
    "\u0002\u0002/\u0003\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002",
    "\u00037\u0003\u0002\u0002\u0002\u00059\u0003\u0002\u0002\u0002\u0007",
    ";\u0003\u0002\u0002\u0002\t=\u0003\u0002\u0002\u0002\u000b?\u0003\u0002",
    "\u0002\u0002\rA\u0003\u0002\u0002\u0002\u000fC\u0003\u0002\u0002\u0002",
    "\u0011E\u0003\u0002\u0002\u0002\u0013G\u0003\u0002\u0002\u0002\u0015",
    "I\u0003\u0002\u0002\u0002\u0017K\u0003\u0002\u0002\u0002\u0019M\u0003",
    "\u0002\u0002\u0002\u001bO\u0003\u0002\u0002\u0002\u001dQ\u0003\u0002",
    "\u0002\u0002\u001fS\u0003\u0002\u0002\u0002!V\u0003\u0002\u0002\u0002",
    "#Z\u0003\u0002\u0002\u0002%`\u0003\u0002\u0002\u0002\'m\u0003\u0002",
    "\u0002\u0002)}\u0003\u0002\u0002\u0002+\u0081\u0003\u0002\u0002\u0002",
    "-\u008c\u0003\u0002\u0002\u0002/\u009a\u0003\u0002\u0002\u00021\u009e",
    "\u0003\u0002\u0002\u00023\u00a2\u0003\u0002\u0002\u00025\u00a9\u0003",
    "\u0002\u0002\u000278\u0007@\u0002\u00028\u0004\u0003\u0002\u0002\u0002",
    "9:\u0007>\u0002\u0002:\u0006\u0003\u0002\u0002\u0002;<\u0007*\u0002",
    "\u0002<\b\u0003\u0002\u0002\u0002=>\u0007+\u0002\u0002>\n\u0003\u0002",
    "\u0002\u0002?@\u0007]\u0002\u0002@\f\u0003\u0002\u0002\u0002AB\u0007",
    "_\u0002\u0002B\u000e\u0003\u0002\u0002\u0002CD\u0007}\u0002\u0002D\u0010",
    "\u0003\u0002\u0002\u0002EF\u0007\u007f\u0002\u0002F\u0012\u0003\u0002",
    "\u0002\u0002GH\u00070\u0002\u0002H\u0014\u0003\u0002\u0002\u0002IJ\t",
    "\u0002\u0002\u0002J\u0016\u0003\u0002\u0002\u0002KL\u0007#\u0002\u0002",
    "L\u0018\u0003\u0002\u0002\u0002MN\u0007,\u0002\u0002N\u001a\u0003\u0002",
    "\u0002\u0002OP\u0007`\u0002\u0002P\u001c\u0003\u0002\u0002\u0002QR\u0007",
    "&\u0002\u0002R\u001e\u0003\u0002\u0002\u0002ST\u0007.\u0002\u0002T ",
    "\u0003\u0002\u0002\u0002UW\u0007\u000f\u0002\u0002VU\u0003\u0002\u0002",
    "\u0002VW\u0003\u0002\u0002\u0002WX\u0003\u0002\u0002\u0002XY\u0007\f",
    "\u0002\u0002Y\"\u0003\u0002\u0002\u0002Z[\u0007&\u0002\u0002[\\\u0005",
    "5\u001b\u0002\\$\u0003\u0002\u0002\u0002]_\u0005\u0015\u000b\u0002^",
    "]\u0003\u0002\u0002\u0002_b\u0003\u0002\u0002\u0002`^\u0003\u0002\u0002",
    "\u0002`a\u0003\u0002\u0002\u0002ac\u0003\u0002\u0002\u0002b`\u0003\u0002",
    "\u0002\u0002cg\u0007~\u0002\u0002df\u0005\u0015\u000b\u0002ed\u0003",
    "\u0002\u0002\u0002fi\u0003\u0002\u0002\u0002ge\u0003\u0002\u0002\u0002",
    "gh\u0003\u0002\u0002\u0002h&\u0003\u0002\u0002\u0002ig\u0003\u0002\u0002",
    "\u0002jl\u0005\u0015\u000b\u0002kj\u0003\u0002\u0002\u0002lo\u0003\u0002",
    "\u0002\u0002mk\u0003\u0002\u0002\u0002mn\u0003\u0002\u0002\u0002np\u0003",
    "\u0002\u0002\u0002om\u0003\u0002\u0002\u0002pt\u0007?\u0002\u0002qs",
    "\u0005\u0015\u000b\u0002rq\u0003\u0002\u0002\u0002sv\u0003\u0002\u0002",
    "\u0002tr\u0003\u0002\u0002\u0002tu\u0003\u0002\u0002\u0002u(\u0003\u0002",
    "\u0002\u0002vt\u0003\u0002\u0002\u0002wx\u00070\u0002\u0002x{\u0005",
    "3\u001a\u0002yz\u0007*\u0002\u0002z|\u0007+\u0002\u0002{y\u0003\u0002",
    "\u0002\u0002{|\u0003\u0002\u0002\u0002|~\u0003\u0002\u0002\u0002}w\u0003",
    "\u0002\u0002\u0002~\u007f\u0003\u0002\u0002\u0002\u007f}\u0003\u0002",
    "\u0002\u0002\u007f\u0080\u0003\u0002\u0002\u0002\u0080*\u0003\u0002",
    "\u0002\u0002\u0081\u0083\u0007(\u0002\u0002\u0082\u0084\t\u0003\u0002",
    "\u0002\u0083\u0082\u0003\u0002\u0002\u0002\u0084\u0085\u0003\u0002\u0002",
    "\u0002\u0085\u0083\u0003\u0002\u0002\u0002\u0085\u0086\u0003\u0002\u0002",
    "\u0002\u0086\u0087\u0003\u0002\u0002\u0002\u0087\u0088\u0007=\u0002",
    "\u0002\u0088,\u0003\u0002\u0002\u0002\u0089\u008b\u0005\u0015\u000b",
    "\u0002\u008a\u0089\u0003\u0002\u0002\u0002\u008b\u008e\u0003\u0002\u0002",
    "\u0002\u008c\u008a\u0003\u0002\u0002\u0002\u008c\u008d\u0003\u0002\u0002",
    "\u0002\u008d\u0090\u0003\u0002\u0002\u0002\u008e\u008c\u0003\u0002\u0002",
    "\u0002\u008f\u0091\t\u0004\u0002\u0002\u0090\u008f\u0003\u0002\u0002",
    "\u0002\u0091\u0092\u0003\u0002\u0002\u0002\u0092\u0090\u0003\u0002\u0002",
    "\u0002\u0092\u0093\u0003\u0002\u0002\u0002\u0093\u0097\u0003\u0002\u0002",
    "\u0002\u0094\u0096\u0005\u0015\u000b\u0002\u0095\u0094\u0003\u0002\u0002",
    "\u0002\u0096\u0099\u0003\u0002\u0002\u0002\u0097\u0095\u0003\u0002\u0002",
    "\u0002\u0097\u0098\u0003\u0002\u0002\u0002\u0098.\u0003\u0002\u0002",
    "\u0002\u0099\u0097\u0003\u0002\u0002\u0002\u009a\u009b\t\u0005\u0002",
    "\u0002\u009b\u009c\u0007?\u0002\u0002\u009c0\u0003\u0002\u0002\u0002",
    "\u009d\u009f\n\u0006\u0002\u0002\u009e\u009d\u0003\u0002\u0002\u0002",
    "\u009f\u00a0\u0003\u0002\u0002\u0002\u00a0\u009e\u0003\u0002\u0002\u0002",
    "\u00a0\u00a1\u0003\u0002\u0002\u0002\u00a12\u0003\u0002\u0002\u0002",
    "\u00a2\u00a6\t\u0007\u0002\u0002\u00a3\u00a5\t\b\u0002\u0002\u00a4\u00a3",
    "\u0003\u0002\u0002\u0002\u00a5\u00a8\u0003\u0002\u0002\u0002\u00a6\u00a4",
    "\u0003\u0002\u0002\u0002\u00a6\u00a7\u0003\u0002\u0002\u0002\u00a74",
    "\u0003\u0002\u0002\u0002\u00a8\u00a6\u0003\u0002\u0002\u0002\u00a9\u00ad",
    "\t\t\u0002\u0002\u00aa\u00ac\t\b\u0002\u0002\u00ab\u00aa\u0003\u0002",
    "\u0002\u0002\u00ac\u00af\u0003\u0002\u0002\u0002\u00ad\u00ab\u0003\u0002",
    "\u0002\u0002\u00ad\u00ae\u0003\u0002\u0002\u0002\u00ae6\u0003\u0002",
    "\u0002\u0002\u00af\u00ad\u0003\u0002\u0002\u0002\u0011\u0002V`gmt{\u007f",
    "\u0085\u008c\u0092\u0097\u00a0\u00a6\u00ad\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class RiScriptLexer extends antlr4.Lexer {

    static grammarFileName = "RiScript.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'>'", "'<'", "'('", "')'", "'['", "']'", 
                         "'{'", "'}'", "'.'", null, "'!'", "'*'", "'^'", 
                         "'$'", "','" ];
	static symbolicNames = [ null, "GT", "LT", "LP", "RP", "LB", "RB", "LCB", 
                          "RCB", "DOT", "WS", "EXC", "AST", "HAT", "DOL", 
                          "COM", "NL", "SYM", "OR", "EQ", "TF", "ENT", "INT", 
                          "OP", "CHR" ];
	static ruleNames = [ "GT", "LT", "LP", "RP", "LB", "RB", "LCB", "RCB", 
                      "DOT", "WS", "EXC", "AST", "HAT", "DOL", "COM", "NL", 
                      "SYM", "OR", "EQ", "TF", "ENT", "INT", "OP", "CHR", 
                      "IDENT", "NIDENT" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

RiScriptLexer.EOF = antlr4.Token.EOF;
RiScriptLexer.GT = 1;
RiScriptLexer.LT = 2;
RiScriptLexer.LP = 3;
RiScriptLexer.RP = 4;
RiScriptLexer.LB = 5;
RiScriptLexer.RB = 6;
RiScriptLexer.LCB = 7;
RiScriptLexer.RCB = 8;
RiScriptLexer.DOT = 9;
RiScriptLexer.WS = 10;
RiScriptLexer.EXC = 11;
RiScriptLexer.AST = 12;
RiScriptLexer.HAT = 13;
RiScriptLexer.DOL = 14;
RiScriptLexer.COM = 15;
RiScriptLexer.NL = 16;
RiScriptLexer.SYM = 17;
RiScriptLexer.OR = 18;
RiScriptLexer.EQ = 19;
RiScriptLexer.TF = 20;
RiScriptLexer.ENT = 21;
RiScriptLexer.INT = 22;
RiScriptLexer.OP = 23;
RiScriptLexer.CHR = 24;



